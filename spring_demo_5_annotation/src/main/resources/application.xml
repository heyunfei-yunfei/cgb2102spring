<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!--构建user对象-->
    <bean id="user" class="com.jt.pojo.User">
        <property name="id" value="101"/>
        <property name="name" value="springMVC设计模式">

        </property>
    </bean>
    <!--构建Dao对象
    根据面向接口编程
    Id:接口的名称
    class:实现类的包路径-->
    <bean id="userDao" class="com.jt.dao.UserDaoImpl"></bean>

    <!--构建Service
    自动装配:程序无需手动的编辑property属性
    autowire="byName根据属性的名称进行注入
    1.找到对象的所有的set方法 setUserDao()
    2.setUserDao    set去掉   UserDao         将首字母小写    userDao属性
    3.Spring会根据对象的属性查询自己维护的Map集合,根据userDao名称,查找Map
    中的Key与之对应,如果匹配成功,则能自动调用set方法实现注入(必须有set方法)

    autowire = "byType"
    1. 1.找到对象的所有的set方法 setUserDao()
    2.根据set方法找到方法中参数的类型UserDao.class
    3.Spring根据自己维护对象的Class进行匹配.如果匹配成功 则实现注入(set方法)

    autowire:规则 如果配置了byName则首先按照name查找.-->
    <bean id="userService" class="com.jt.service.UserServiceImpl" autowire="byType"></bean>

    <bean id="userController" class="com.jt.controller.UserController" autowire="byType"></bean>




</beans>
